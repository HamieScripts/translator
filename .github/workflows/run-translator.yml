name: Run Translator Manually
permissions:
  contents: write
on:
  workflow_dispatch:
    inputs:
      folder:
        description: 'URI to folder containing translations'
        required: true
        default: 'example-data'
      from:
        description: 'Source language code (2-letter ISO, e.g. en)'
        required: true
        default: 'en'
      to:
        description: 'Target language code (2-letter ISO, e.g. fr)'
        required: true
        default: 'fr'

jobs:
  translate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read source JSON into variable
        id: read_source
        run: |
          echo "source_json=$(base64 -w 0 example-data/en.json)" >> $GITHUB_OUTPUT

      # - name: Run Translator
      #   id: run_translator
      #   uses: HamieScripts/translator@main
      #   with:
      #     source-json: ${{ steps.read_source.outputs.source_json }}
      #     from: en
      #     to: fr
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # - name: Run AWS Translate for each key
      #   id: translate
      #   run: |
      #     # Decode source JSON into a file
      #     echo "${{ steps.read_source.outputs.source_json }}" | base64 -d > source.json

      #     # Loop through each key-value pair and translate it
      #     mkdir -p translated
      #     jq -r 'to_entries[] | "\(.key)\u0000\(.value)"' source.json | while IFS=$'\0' read -r key value; do
      #       # Build JSON input for AWS Translate
      #       JSON_INPUT=$(jq -n --arg text "$value" --arg src "${{ github.event.inputs.from }}" --arg tgt "${{ github.event.inputs.to }}" '{
      #         Text: $text,
      #         SourceLanguageCode: $src,
      #         TargetLanguageCode: $tgt
      #       }')

      #       # Run AWS Translate
      #       translated=$(aws translate translate-text --cli-input-json "$JSON_INPUT" --output json | jq -r '.TranslatedText')

      #       # Store result in a new JSON file
      #       jq -n --arg k "$key" --arg v "$translated" '{($k): $v}' > "translated/$key.json"
      #     done

      #     # Merge all translated entries into one JSON file
      #     jq -s 'add' translated/*.json > example-data/${{ github.event.inputs.to }}.json      
      
      - name: Run AWS Translate for each key
        id: translate
        run: |
          # Decode source JSON into a file
          echo "${{ steps.read_source.outputs.source_json }}" | base64 -d
          aws translate translate-text \
            --cli-input-json "${{ steps.read_source.outputs.source_json }}" | base64 -d \
            --output json | jq -r '.TranslatedText'


      - name: Write translated JSON to file
        run: |
          echo '${{ steps.translate.outputs.TranslatedText }}' > example-data/fr.json

      - name: Commit and push translated file
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add example-data/${{ github.event.inputs.to }}.json
          git commit -m "Add translated ${{ github.event.inputs.to }}.json from GitHub Action" || echo "No changes to commit"
          git push
